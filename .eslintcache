[{"D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\index.js":"1","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\App.js":"2","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\ui\\header.js":"3","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\ui\\search.js":"4","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\character\\characterflex.js":"5","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\character\\chanracterItem.js":"6","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\ui\\spinner.js":"7"},{"size":197,"mtime":1611378892728,"results":"8","hashOfConfig":"9"},{"size":885,"mtime":1611506731535,"results":"10","hashOfConfig":"9"},{"size":343,"mtime":1611417817351,"results":"11","hashOfConfig":"9"},{"size":647,"mtime":1611517056281,"results":"12","hashOfConfig":"9"},{"size":446,"mtime":1611502725746,"results":"13","hashOfConfig":"9"},{"size":1131,"mtime":1611497862203,"results":"14","hashOfConfig":"9"},{"size":286,"mtime":1611510244838,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xh1kez",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"18"},"D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\index.js",[],["37","38"],"D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\App.js",["39"],"import axios from 'axios';\nimport React, { Component, useEffect, useState } from 'react';\nimport './App.css';\nimport Header from \"./components/ui/header\"\nimport Search from \"./components/ui/search\"\nimport CharacterFlex from \"./components/character/characterflex\"\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [isloading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('')\n\n  useEffect(()=>{\n    const fatch = async () => {\n      const result = await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`)\n      console.log(result.data)\n\n      setItems(result.data)\n      setIsLoading(false)\n    }\n\n    fatch()\n  }, [query])\n  return (\n    <div className=\"App\">\n     <Header/>\n     <Search getQuery={(q) => setQuery(q)}/><br></br>\n     <CharacterFlex isloading={isloading} items={items}/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\ui\\header.js",["40"],"import React, { Component } from 'react';\r\nimport logo from \"../../img/logo.png\"\r\n\r\nclass Header extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <header className=\"center\">\r\n                <img className=\"logo\" src={logo}></img>\r\n            </header>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\ui\\search.js",["41","42"],"import Header from './header';\r\nimport React, { Component, useState } from 'react';\r\n\r\nconst Search = ({ getQuery }) => {\r\n    const [text, setText] = useState('')\r\n\r\n    const onchange = (q) => {\r\n        setText(q)\r\n        getQuery(q)\r\n\r\n    }\r\n        return ( \r\n            <div className=\"center\">\r\n                <input style={{width:\"350px\"}}\r\n                className=\"searchChar\" \r\n                autoFocus \r\n                value={text}\r\n                onChange={(e) => onchange(e.target.value)}\r\n                placeholder=\"Search Here\"\r\n                ></input>\r\n            </div>\r\n         );\r\n}\r\n \r\nexport default Search;\r\n\r\n","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\character\\characterflex.js",["43","44"],"import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport CharacterItem from \"./chanracterItem\";\r\nimport Spinner from \"./../ui/spinner\"\r\n\r\nconst CharacterFlex = ({items, isloading}) => {\r\n   return isloading ? (<Spinner/>) : <section className=\"cards\">\r\n       {items.map(item =>(\r\n           <CharacterItem key={item.char_id}  item={item}/>\r\n       ))}\r\n   </section> \r\n\r\n}\r\nexport default CharacterFlex","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\character\\chanracterItem.js",["45","46"],"import React, { Component } from 'react';\r\n\r\nconst CharacterItem= ({item}) => {\r\n    return (\r\n        <div className=\"main_card\">\r\n            <div className=\"card\">\r\n                <div className=\"front_card\">\r\n                    <img className=\"card_img\" src={item.img}></img>\r\n                </div>\r\n                <div className=\"back_card\">\r\n                    <h1>{item.name}</h1>\r\n                    <hr style={{width:\"250px\"}}></hr>\r\n                    <ul>\r\n                        <li>\r\n                            <strong>Actor Name:</strong> {item.portrayed}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Nickname:</strong> {item.nickname}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Birthday:</strong> {item.birthday}\r\n                        </li>\r\n                        <li>\r\n                            <strong>Status:</strong> {item.status}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CharacterItem","D:\\WedFiles\\Web 2 Projects\\Using Breaking Bad API\\breaking_bad\\src\\components\\ui\\spinner.js",["47","48"],"import React, { Component } from 'react';\r\nimport spinner from '../../img/spinner.gif'\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <img src={spinner} style={{width:\"200px\", margin:\"auto\", display:\"block\" }}></img>\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":9,"column":17,"nodeType":"59","endLine":9,"endColumn":50},{"ruleId":"53","severity":1,"message":"60","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"61","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":8,"column":21,"nodeType":"59","endLine":8,"endColumn":62},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":6,"column":13,"nodeType":"59","endLine":6,"endColumn":89},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Header' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]